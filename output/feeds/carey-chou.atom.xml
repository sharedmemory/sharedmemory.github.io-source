<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom"><title>Shared Memory</title><link href="sharedmemory.github.io/" rel="alternate"></link><link href="sharedmemory.github.io/feeds/carey-chou.atom.xml" rel="self"></link><id>sharedmemory.github.io/</id><updated>2016-10-01T10:20:04+00:00</updated><entry><title>RBM Choice Models</title><link href="sharedmemory.github.io/blog/2016/10/01/rbm-choice-models/" rel="alternate"></link><published>2016-10-01T10:20:04+00:00</published><updated>2016-10-01T10:20:04+00:00</updated><author><name>Carey Chou</name></author><id>tag:,2016-10-01:sharedmemory.github.io/blog/2016/10/01/rbm-choice-models/</id><summary type="html">&lt;h2&gt;Context&lt;/h2&gt;
&lt;p&gt;Modeling customers' choices is an important step towards understanding how purchase decisions are made as well as being able to quantify the magnitude of tradeoffs among product functions.&lt;/p&gt;
&lt;p&gt;Traditional approaches to constructing choice models assume IIA (Independence of Irrelevant Alternatives) -- which include MLM, Conjoint Analysis, etc.  In reality, it is impractical to assume that every customer has equal exposure to all choices when making a decision.&lt;/p&gt;
&lt;p&gt;As we continue to gather online engagement data, product browse/click tracking data gives us a direct signal to model a customer's decision behavior.  Essentailly, we can categorize each visit to the site as a customer trip, then add a binary label to the product being purchased versus the other products being viewed in the session.  Products being viewed are grouped into a "choice set" and the product being purchased is known as the "selection set".  While the maximum size of a choice set is limited to the number of products in an assortment, in reality, the size of the choice set on a per-customer bases will be significantly smaller (i.e. customers will normally consider only a few products when deciding to make a purchase).  In our use case, the average choice set contains approximately 15 products; this is the typical challenge under IIA assumption - the number of available products can sometimes be in the millions (i.e. Amazon) which create very sparse choice sets.&lt;/p&gt;
&lt;p&gt;To tackle this unique problem, we studied several methods including lower bound non-parametric models, rank based EM models, and &lt;a href="http://papers.nips.cc/paper/5280-restricted-boltzmann-machines-modeling-human-choice.pdf"&gt;RBM Human Choice&lt;/a&gt;.  These are the most recent emerging approaches to solve sparsity choice models with limited data.  The RBM approach is appealing in that we can also derive side-by-side complimentary, substituted, and attractive effects.&lt;/p&gt;
&lt;h2&gt;Implementation&lt;/h2&gt;
&lt;p&gt;We implemented the solution using Python + Chainer on three Nvidia GeForce TITAN X GPUs.  The network is a binary RBM (visible and hidden) with adaptive weight decay.  To speed up the training, we adopt K-contrasive divergence learning, which essentially is a K-steps gibbs sampling method.  The weights are updated through reconstruction error on the visible layer via sigmoid cross entropy.&lt;/p&gt;
&lt;h2&gt;Results&lt;/h2&gt;
&lt;p&gt;Use trained hidden-to-visible weights to calculate choice rate&lt;/p&gt;
&lt;div class="math"&gt;$$\lambda(x|X)\equiv exp(b_{x})\displaystyle\prod_{k\in K} (1 + exp(T_{X}^{k} + U_x^{k}))$$&lt;/div&gt;
&lt;p&gt;where &lt;/p&gt;
&lt;div class="math"&gt;$$x \in X$$&lt;/div&gt;
&lt;p&gt; and &lt;/p&gt;
&lt;div class="math"&gt;$$T_X^{k} \equiv \displaystyle\sum_{Y \in X} T_Y^{k}$$&lt;/div&gt;
&lt;p&gt;We can use these probabilities to compare two products in a choice set.&lt;/p&gt;
&lt;p&gt;&lt;img alt="alt text" src="/images/ysl_handbags.png" title="YSL" /&gt;&lt;/p&gt;
&lt;p&gt;&lt;img alt="alt text" src="/images/ugly_handbag.png" title="Extreme Difference" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Take the most frequent pairs of products in our validation data&lt;/li&gt;
&lt;li&gt;Calculate their choice rate&lt;/li&gt;
&lt;li&gt;Calculate their choice rate from each choice set that they occur in in the validation data&lt;/li&gt;
&lt;li&gt;Calculate the KL-Divergence between these two distributions and use this metric as the graph weight &lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="alt test" src="/images/graph.png" title="KLD-Graph" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;We can also calculate attraction effect.  If we have two products in a choice set, how does the addition of a third product affect customer choice?&lt;/li&gt;
&lt;li&gt;The strength of the attraction effect of a product C on A is defined as&lt;/li&gt;
&lt;/ul&gt;
&lt;div class="math"&gt;$$\psi_{A,C,X}^{(att)}\equiv\frac{p(A|X \cup \{C\})}{p(A|X)}$$&lt;/div&gt;
&lt;ul&gt;
&lt;li&gt;When this equation is greater than one there is an attraction effect.&lt;/li&gt;
&lt;li&gt;Product B is prefered much more than product A&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="alt text" src="/images/pre_attraction.png" title="Before addition of attraction" /&gt;&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;After the addition of a product C, the probability of product A has increased 12 fold.&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img alt="alt text" src="/images/post_attraction.png" title="Post attraction" /&gt;&lt;/p&gt;
&lt;div class="math"&gt;$$\frac{0.1373}{0.0109} = 12.59$$&lt;/div&gt;
&lt;h2&gt;References&lt;/h2&gt;
&lt;p&gt;[1] Osogami, Takayuki and Otsuka, Makoto.  Testricted Boltzmann Machines modeling human choice.  &lt;em&gt;IBM Research - Tokyo&lt;/em&gt;.&lt;/p&gt;
&lt;script type="text/javascript"&gt;if (!document.getElementById('mathjaxscript_pelican_#%@#$@#')) {
    var align = "center",
        indent = "0em",
        linebreak = "false";

    if (false) {
        align = (screen.width &lt; 768) ? "left" : align;
        indent = (screen.width &lt; 768) ? "0em" : indent;
        linebreak = (screen.width &lt; 768) ? 'true' : linebreak;
    }

    var mathjaxscript = document.createElement('script');
    var location_protocol = (false) ? 'https' : document.location.protocol;
    if (location_protocol !== 'http' &amp;&amp; location_protocol !== 'https') location_protocol = 'https:';
    mathjaxscript.id = 'mathjaxscript_pelican_#%@#$@#';
    mathjaxscript.type = 'text/javascript';
    mathjaxscript.src = location_protocol + '//cdn.mathjax.org/mathjax/latest/MathJax.js?config=TeX-AMS-MML_HTMLorMML';
    mathjaxscript[(window.opera ? "innerHTML" : "text")] =
        "MathJax.Hub.Config({" +
        "    config: ['MMLorHTML.js']," +
        "    TeX: { extensions: ['AMSmath.js','AMSsymbols.js','noErrors.js','noUndefined.js'], equationNumbers: { autoNumber: 'AMS' } }," +
        "    jax: ['input/TeX','input/MathML','output/HTML-CSS']," +
        "    extensions: ['tex2jax.js','mml2jax.js','MathMenu.js','MathZoom.js']," +
        "    displayAlign: '"+ align +"'," +
        "    displayIndent: '"+ indent +"'," +
        "    showMathMenu: true," +
        "    messageStyle: 'normal'," +
        "    tex2jax: { " +
        "        inlineMath: [ ['\\\\(','\\\\)'] ], " +
        "        displayMath: [ ['$$','$$'] ]," +
        "        processEscapes: true," +
        "        preview: 'TeX'," +
        "    }, " +
        "    'HTML-CSS': { " +
        "        styles: { '.MathJax_Display, .MathJax .mo, .MathJax .mi, .MathJax .mn': {color: 'inherit ! important'} }," +
        "        linebreaks: { automatic: "+ linebreak +", width: '90% container' }," +
        "    }, " +
        "}); " +
        "if ('default' !== 'default') {" +
            "MathJax.Hub.Register.StartupHook('HTML-CSS Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax['HTML-CSS'].FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
            "MathJax.Hub.Register.StartupHook('SVG Jax Ready',function () {" +
                "var VARIANT = MathJax.OutputJax.SVG.FONTDATA.VARIANT;" +
                "VARIANT['normal'].fonts.unshift('MathJax_default');" +
                "VARIANT['bold'].fonts.unshift('MathJax_default-bold');" +
                "VARIANT['italic'].fonts.unshift('MathJax_default-italic');" +
                "VARIANT['-tex-mathit'].fonts.unshift('MathJax_default-italic');" +
            "});" +
        "}";
    (document.body || document.getElementsByTagName('head')[0]).appendChild(mathjaxscript);
}
&lt;/script&gt;</summary></entry></feed>